{"version":3,"sources":["index.js","mpserverless.js","transport.js","codec.js","error.js","network.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;ACFA,AHSA,ACHA,ACHA;ACFA,AHSA,ACHA,ACHA;ACFA,AHSA,ACHA,ACHA;ACFA,ACHA,AJYA,ACHA,ACHA;ACFA,ACHA,AJYA,ACHA,ACHA;ACFA,ACHA,AJYA,ACHA,ACHA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,ACHA,AHSA,AIZA,AHSA;ACFA,AFMA,AIZA,AHSA;ACFA,AFMA,AIZA,AHSA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"./mpserverless\"], factory);\n    }\n})(function (require, exports) {\n    \n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var mpserverless_1 = require(\"./mpserverless\");\n    exports.MPServerless = mpserverless_1.MPServerless;\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFBQSwrQ0FBOEM7SUFBckMsc0NBQUEsWUFBWSxDQUFBIn0=","(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"tslib\", \"@ant-basement/core\", \"@ant-basement/services\", \"./transport\", \"mime/lite\", \"./error\", \"./network\"], factory);\n    }\n})(function (require, exports) {\n    \n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const tslib_1 = require(\"tslib\");\n    const core_1 = require(\"@ant-basement/core\");\n    const services_1 = require(\"@ant-basement/services\");\n    const transport_1 = require(\"./transport\");\n    const lite_1 = tslib_1.__importDefault(require(\"mime/lite\"));\n    const error_1 = require(\"./error\");\n    const network_1 = require(\"./network\");\n    class MiniProgramFileService extends services_1.FileService {\n        async uploadFile(options) {\n            core_1.assert(options.filePath && typeof options.filePath === 'string', 'missing options.filePath');\n            const relativePath = options.filePath.replace(/(.*):\\/\\//, '');\n            const extension = relativePath.split('.').pop();\n            core_1.assert(core_1.WHITELIST_EXTENSIONS.includes(extension.toLowerCase()), `目前不支持 ${extension} 类型文件`);\n            const meta = Object.keys(options.meta || {}).reduce((accu, key) => {\n                accu[`x-oss-meta-${key}`] = options.meta[key];\n                return accu;\n            }, {});\n            const headers = options.headers ? core_1.OSSUploadHeaderList.reduce((accu, key) => {\n                const fieldName = key.replace(/\\-[A-Z]/g, match => match[1]).replace(/^[A-Z]/, match => match.toLowerCase());\n                if (options.headers.hasOwnProperty(fieldName))\n                    accu[key] = options.headers[fieldName];\n                return accu;\n            }, {}) : {};\n            let fileSize = options.fileSize;\n            const getFileInfo = this.transport.getFileInfo;\n            if (!fileSize && getFileInfo) {\n                const fileInfo = await getFileInfo({\n                    filePath: options.filePath,\n                });\n                fileSize = fileInfo.size;\n            }\n            let imageExt = options.extension;\n            const getImageInfo = this.transport.getImageInfo;\n            if (!imageExt && getImageInfo) {\n                const imageInfo = await getImageInfo({\n                    src: options.filePath,\n                });\n                imageExt = imageInfo.type;\n            }\n            const uploadRes = await this.getOSSUploadOptionsFromPath(relativePath, options.path, fileSize);\n            if (uploadRes.error) {\n                throw new error_1.MPServerlessClientError(core_1.ErrorName.INTERFACE_ERROR, core_1.ErrorCode.INTERFACE_RESPONSE_FAILED, core_1.ErrorType.COMMON_ERROR, uploadRes.error.message);\n            }\n            const uploadOptions = core_1.OSSUploadResponseFormat(uploadRes.result);\n            await this.uploadFileToOSS(options, uploadOptions, headers, meta);\n            await this.reportOSSUpload(uploadOptions.id, lite_1.default.getType(imageExt));\n            return {\n                fileUrl: `https://${uploadOptions.host}/${uploadOptions.key}`,\n                filePath: uploadOptions.key,\n            };\n        }\n        async uploadFileToOSS(fileUploadOptions, ossUploadOptions, headers, meta) {\n            const options = ['key', 'policy', 'Signature', 'OSSAccessKeyId'].reduce((accu, key) => {\n                accu[key] = ossUploadOptions[key];\n                return accu;\n            }, ossUploadOptions);\n            const uploadHeader = {};\n            if (fileUploadOptions.extension) {\n                const contentType = lite_1.default.getType(fileUploadOptions.extension);\n                if (!contentType) {\n                    throw new error_1.MPServerlessClientError(core_1.ErrorName.VALIDATION_ERROR, core_1.ErrorCode.VALIDATION_FAILED, core_1.ErrorType.COMMON_ERROR, '文件扩展错误，无法解析正确的 MIME');\n                }\n                uploadHeader['Content-Type'] = contentType;\n            }\n            headers['Cache-Control'] = 'max-age=2592000';\n            await this.transport.upload(`https://${ossUploadOptions.host}`, Object.assign({ success_action_status: 200 }, headers, meta, options), 'file', fileUploadOptions.filePath, uploadHeader);\n        }\n    }\n    class MPServerless extends core_1.Basement {\n        constructor(appGlobal, options) {\n            super({ ...options, httpClient: appGlobal, httpTransport: transport_1.MiniProgramHTTPTransport, logger: appGlobal.logger });\n            core_1.assert(options.clientSecret, 'clientSecret is required');\n            core_1.assert(options.appId, 'appId is required');\n            this.db = new services_1.DbService(this.transport);\n            this.user = new services_1.AuthService(this.transport);\n            this.file = new MiniProgramFileService(this.transport);\n            this.function = new services_1.FunctionService(this.transport);\n            this.network = new network_1.NetworkService(this.transport);\n            this.user.authorize = async (options) => {\n                const hasToken = this.transport.hasToken();\n                if (options.authType === transport_1.AuthType.ANONYMOUS) {\n                    const token = await this.transport.anonymousAuthorize(options);\n                    if (token) {\n                        return {\n                            success: true,\n                        };\n                    }\n                    return {\n                        success: false,\n                    };\n                }\n                else if (!hasToken || hasToken && this.transport.authType !== options.authType) {\n                    const token = await this.transport.authorize(options);\n                    if (token) {\n                        return {\n                            success: true,\n                        };\n                    }\n                    return {\n                        success: false,\n                    };\n                }\n            };\n        }\n        get version() {\n            return VERSION;\n        }\n        get ua() {\n            return PKGUA;\n        }\n        createTransport(options) {\n            super.createTransport(options);\n            this.transport.setAppSecret(options.clientSecret).setUA(this.ua);\n        }\n    }\n    exports.MPServerless = MPServerless;\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXBzZXJ2ZXJsZXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21wc2VydmVybGVzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBQSw2Q0FhNEI7SUFDNUIscURBRWdDO0lBQ2hDLDJDQUFtRjtJQUNuRiw2REFBNkI7SUFDN0IsbUNBQWtEO0lBQ2xELHVDQUVtQjtJQUVuQixNQUFNLHNCQUF1QixTQUFRLHNCQUFXO1FBTXZDLEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBMEI7WUFDaEQsYUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUksT0FBTyxPQUFPLENBQUMsUUFBUSxLQUFLLFFBQVEsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1lBRTdGLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUMvRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2hELGFBQU0sQ0FBQywyQkFBb0IsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUsU0FBUyxTQUFTLE9BQU8sQ0FBQyxDQUFDO1lBRTFGLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUU7Z0JBQ2hFLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDOUMsT0FBTyxJQUFJLENBQUM7WUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDUCxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQywwQkFBbUIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUU7Z0JBQ3pFLE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO2dCQUM3RyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQztvQkFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDdEYsT0FBTyxJQUFJLENBQUM7WUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUVaLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDaEMsTUFBTSxXQUFXLEdBQUksSUFBSSxDQUFDLFNBQXNDLENBQUMsV0FBVyxDQUFDO1lBQzdFLElBQUksQ0FBQyxRQUFRLElBQUksV0FBVyxFQUFFO2dCQUM1QixNQUFNLFFBQVEsR0FBRyxNQUFNLFdBQVcsQ0FBQztvQkFDakMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxRQUFRO2lCQUMzQixDQUFDLENBQUM7Z0JBQ0gsUUFBUSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUM7YUFDMUI7WUFFRCxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO1lBQ2pDLE1BQU0sWUFBWSxHQUFJLElBQUksQ0FBQyxTQUFzQyxDQUFDLFlBQVksQ0FBQztZQUMvRSxJQUFJLENBQUMsUUFBUSxJQUFJLFlBQVksRUFBRTtnQkFDN0IsTUFBTSxTQUFTLEdBQUcsTUFBTSxZQUFZLENBQUM7b0JBQ25DLEdBQUcsRUFBRSxPQUFPLENBQUMsUUFBUTtpQkFDdEIsQ0FBQyxDQUFDO2dCQUNILFFBQVEsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDO2FBQzNCO1lBR0QsTUFBTSxTQUFTLEdBQUcsTUFBTSxJQUFJLENBQUMsMkJBQTJCLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDL0YsSUFBSSxTQUFTLENBQUMsS0FBSyxFQUFFO2dCQUNuQixNQUFNLElBQUksK0JBQXVCLENBQy9CLGdCQUFTLENBQUMsZUFBZSxFQUN6QixnQkFBUyxDQUFDLHlCQUF5QixFQUNuQyxnQkFBUyxDQUFDLFlBQVksRUFDdEIsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQ3hCLENBQUM7YUFDSDtZQUNELE1BQU0sYUFBYSxHQUFHLDhCQUF1QixDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUVoRSxNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFFbEUsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUUsY0FBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBRXJFLE9BQU87Z0JBQ0wsT0FBTyxFQUFFLFdBQVcsYUFBYSxDQUFDLElBQUksSUFBSSxhQUFhLENBQUMsR0FBRyxFQUFFO2dCQUM3RCxRQUFRLEVBQUUsYUFBYSxDQUFDLEdBQUc7YUFDNUIsQ0FBQztRQUNKLENBQUM7UUFFTyxLQUFLLENBQUMsZUFBZSxDQUMzQixpQkFBb0MsRUFDcEMsZ0JBQWtDLEVBQ2xDLE9BQXlCLEVBQ3pCLElBQTJCO1lBRTNCLE1BQU0sT0FBTyxHQUFHLENBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLENBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUU7Z0JBQ3RGLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDbEMsT0FBTyxJQUFJLENBQUM7WUFDZCxDQUFDLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztZQUNyQixNQUFNLFlBQVksR0FBMEIsRUFBRSxDQUFDO1lBRS9DLElBQUksaUJBQWlCLENBQUMsU0FBUyxFQUFFO2dCQUMvQixNQUFNLFdBQVcsR0FBRyxjQUFJLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUM5RCxJQUFJLENBQUMsV0FBVyxFQUFFO29CQUNoQixNQUFNLElBQUksK0JBQXVCLENBQy9CLGdCQUFTLENBQUMsZ0JBQWdCLEVBQzFCLGdCQUFTLENBQUMsaUJBQWlCLEVBQzNCLGdCQUFTLENBQUMsWUFBWSxFQUN0QixxQkFBcUIsQ0FDdEIsQ0FBQztpQkFDSDtnQkFDRCxZQUFZLENBQUMsY0FBYyxDQUFDLEdBQUcsV0FBVyxDQUFDO2FBQzVDO1lBRUQsT0FBTyxDQUFDLGVBQWUsQ0FBQyxHQUFHLGlCQUFpQixDQUFDO1lBQzdDLE1BQU8sSUFBSSxDQUFDLFNBQXNDLENBQUMsTUFBTSxDQUN2RCxXQUFXLGdCQUFnQixDQUFDLElBQUksRUFBRSxFQUNsQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUscUJBQXFCLEVBQUUsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsRUFDckUsTUFBTSxFQUNOLGlCQUFpQixDQUFDLFFBQVEsRUFDMUIsWUFBWSxDQUNiLENBQUM7UUFDSixDQUFDO0tBQ0Y7SUFNRCxNQUFhLFlBQWEsU0FBUSxlQUFJO1FBUXBDLFlBQVksU0FBYyxFQUFFLE9BQXdCO1lBQ2xELEtBQUssQ0FBQyxFQUFFLEdBQUcsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLG9DQUF3QixFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztZQUVoSCxhQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1lBQ3pELGFBQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLG1CQUFtQixDQUFDLENBQUM7WUFFM0MsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLG9CQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3hDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxzQkFBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQWdCLENBQUM7WUFDM0QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLHNCQUFzQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUN2RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksMEJBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDcEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLHdCQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRWxELElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssRUFBRSxPQUF5QixFQUFnQyxFQUFFO2dCQUN0RixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQU0zQyxJQUFJLE9BQU8sQ0FBQyxRQUFRLEtBQUssb0JBQVEsQ0FBQyxTQUFTLEVBQUU7b0JBQzNDLE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDL0QsSUFBSSxLQUFLLEVBQUU7d0JBQ1QsT0FBTzs0QkFDTCxPQUFPLEVBQUUsSUFBSTt5QkFDZCxDQUFDO3FCQUNIO29CQUNELE9BQU87d0JBQ0wsT0FBTyxFQUFFLEtBQUs7cUJBQ2YsQ0FBQztpQkFDSDtxQkFBTSxJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsS0FBSyxPQUFPLENBQUMsUUFBUSxFQUFFO29CQUNoRixNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO29CQUN0RCxJQUFJLEtBQUssRUFBRTt3QkFDVCxPQUFPOzRCQUNMLE9BQU8sRUFBRSxJQUFJO3lCQUNkLENBQUM7cUJBQ0g7b0JBQ0QsT0FBTzt3QkFDTCxPQUFPLEVBQUUsS0FBSztxQkFDZixDQUFDO2lCQUNIO1lBQ0gsQ0FBQyxDQUFDO1FBQ0osQ0FBQztRQU1ELElBQVcsT0FBTztZQUNoQixPQUFPLE9BQU8sQ0FBQztRQUNqQixDQUFDO1FBS0QsSUFBYyxFQUFFO1lBQ2QsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO1FBRVMsZUFBZSxDQUFDLE9BQXdCO1lBQ2hELEtBQUssQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkUsQ0FBQztLQUNGO0lBdEVELG9DQXNFQyJ9","(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"@ant-basement/core\", \"./codec\", \"./error\"], factory);\n    }\n})(function (require, exports) {\n    \n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const core_1 = require(\"@ant-basement/core\");\n    const codec_1 = require(\"./codec\");\n    const error_1 = require(\"./error\");\n    var AuthType;\n    (function (AuthType) {\n        AuthType[\"ANONYMOUS\"] = \"anonymous\";\n        AuthType[\"DEFAULT\"] = \"\";\n    })(AuthType = exports.AuthType || (exports.AuthType = {}));\n    class MiniProgramHTTPTransport extends core_1.HTTPTransport {\n        constructor(endpoint, library) {\n            super(endpoint, library);\n            this.scope = 'auth_user';\n            core_1.assert(library.uploadFile, 'missing uploadFile');\n            core_1.assert(library.getAuthCode, 'missing getAuthCode');\n            core_1.assert(library.request, 'missing request');\n            this.uploadFile = this.wrap(library.uploadFile);\n            this.getAuthCode = this.wrap(library.getAuthCode);\n            this.httpRequest = this.wrap(library.request);\n            if (library.getFileInfo) {\n                this.getFileInfo = this.wrap(library.getFileInfo);\n            }\n            if (library.getImageInfo) {\n                this.getImageInfo = this.wrap(library.getImageInfo);\n            }\n        }\n        getEncoder() {\n            return new codec_1.MiniProgramHTTPRequestEncoder(this.endpoint, this.spaceId);\n        }\n        async request(encoder, retried = false) {\n            const cloned = encoder.clone();\n            const token = await this.getAccessToken();\n            encoder.setBodyField({\n                token,\n            });\n            encoder.sign(this.appSecret);\n            encoder.setBaseHeaders({\n                'Content-Type': 'application/json',\n                'x-basement-token': token,\n            });\n            if (this.ua) {\n                encoder.setBaseHeaders({\n                    'x-serverless-ua': this.ua,\n                });\n            }\n            try {\n                const encoded = encoder.encodeAsHTTPRequestObject({\n                    timeout: this.timeout,\n                    dataType: 'json',\n                });\n                this.logger.info('request encode data', encoded);\n                const decoded = await this.httpRequest(encoded);\n                return decoded;\n            }\n            catch (e) {\n                this.logger.error('request error', e);\n                const isUnAuthorized = e.error.code === 'GATEWAY_INVALID_TOKEN'\n                    || e.error.code === 'InvalidParameter.InvalidToken' || e.status === core_1.HTTP_UNAUTHORIZED;\n                if (isUnAuthorized) {\n                    if (retried) {\n                        throw new error_1.MPServerlessClientError(core_1.ErrorName.UNAUTHORIZED_ERROR, core_1.ErrorCode.AUTHENTICATION_FAILED, core_1.ErrorType.COMMON_ERROR, 'authentication failed');\n                    }\n                    await this.getAccessToken(true);\n                    return await this.request(cloned, true);\n                }\n                if (e.error) {\n                    throw e.error;\n                }\n                throw e;\n            }\n        }\n        hasToken() {\n            return !!this.accessToken;\n        }\n        get authType() {\n            return this.currentAuthType;\n        }\n        async authorize(options) {\n            this.pendingRequest = this\n                .getAuthCode({ scopes: this.scope })\n                .then((res) => {\n                this.logger.info(`Request authcode is ${res.body.authCode || res.body.code} `);\n                return res.body.authCode || res.body.code;\n            })\n                .then((authCode) => {\n                const encoder = this.getEncoder();\n                encoder.setBodyField({\n                    method: 'serverless.auth.user.authorize',\n                    params: {\n                        authProvider: options.authProvider || 'alipay_openapi',\n                        clientIdentifier: this.appId,\n                        authCode,\n                    },\n                });\n                encoder.sign(this.appSecret);\n                encoder.setBaseHeaders({ 'Content-Type': 'application/json' });\n                if (this.ua) {\n                    encoder.setBaseHeaders({\n                        'x-serverless-ua': this.ua,\n                    });\n                }\n                const encoded = encoder.encodeAsHTTPRequestObject({\n                    timeout: this.timeout,\n                    dataType: 'json',\n                });\n                return this.httpRequest(encoded);\n            })\n                .then((res) => {\n                this.logger.info('Request accessToken ' + (res.body.success ? 'success' : 'failed'));\n                if (res.body && res.body.result) {\n                    this.authorizeOptions = options;\n                    this.accessToken = res.body.result.accessToken;\n                    this.currentAuthType = AuthType.DEFAULT;\n                }\n                this.pendingRequest = null;\n                return Promise.resolve(this.accessToken);\n            });\n            return this.pendingRequest;\n        }\n        async anonymousAuthorize(options) {\n            const encoder = this.getEncoder();\n            encoder.setBodyField({\n                method: 'serverless.auth.user.anonymousAuthorize',\n                params: {\n                    clientIdentifier: this.appId,\n                },\n            });\n            encoder.sign(this.appSecret);\n            encoder.setBaseHeaders({ 'Content-Type': 'application/json' });\n            if (this.ua) {\n                encoder.setBaseHeaders({\n                    'x-serverless-ua': this.ua,\n                });\n            }\n            const encoded = encoder.encodeAsHTTPRequestObject({\n                timeout: this.timeout,\n                dataType: 'json',\n            });\n            this.pendingRequest = this.httpRequest(encoded)\n                .then((res) => {\n                this.logger.info('Request accessToken ' + (res.body.success ? 'success' : 'failed'));\n                if (res.body && res.body.result) {\n                    this.authorizeOptions = options;\n                    this.accessToken = res.body.result.accessToken;\n                    this.currentAuthType = AuthType.ANONYMOUS;\n                }\n                this.pendingRequest = null;\n                return Promise.resolve(this.accessToken);\n            });\n            return this.pendingRequest;\n        }\n        async getAccessToken(refresh = false) {\n            if (this.pendingRequest) {\n                this.logger.info('getAccessToken: reuse');\n                return this.pendingRequest;\n            }\n            if (!this.accessToken) {\n                throw new error_1.MPServerlessClientError(core_1.ErrorName.UNAUTHORIZED_ERROR, core_1.ErrorCode.UNAUTHENTICATION, core_1.ErrorType.COMMON_ERROR, 'unauthentication, should use user.authorize / user.anonymousAuthorize first');\n            }\n            if (refresh && this.authorizeOptions) {\n                this.logger.info('getAccessToken: start');\n                if (this.authorizeOptions.authType === AuthType.ANONYMOUS) {\n                    return this.anonymousAuthorize(this.authorizeOptions);\n                }\n                return this.authorize(this.authorizeOptions);\n            }\n            return this.accessToken;\n        }\n        async upload(host, formData, fileName, filePath, header) {\n            this.logger.info('upload with params');\n            this.logger.info(JSON.stringify(formData, null, 2));\n            return await this.uploadFile({\n                url: host,\n                formData,\n                fileName,\n                name: fileName,\n                filePath,\n                fileType: 'image',\n                header: {\n                    ...header,\n                    'X-OSS-server-side-encrpytion': 'AES256',\n                },\n            });\n        }\n        wrap(myMethod) {\n            return args => {\n                return new Promise((resolve, reject) => {\n                    myMethod(Object.assign(args, {\n                        complete: (res = {}) => {\n                            this.logger.info('completed request');\n                            this.logger.info(JSON.stringify(res, null, 2));\n                            const decoder = new codec_1.MiniProgramHTTPResponseDecoder();\n                            const response = decoder.decode(res);\n                            if (response.error) {\n                                return reject(response);\n                            }\n                            return resolve(response);\n                        },\n                    }));\n                });\n            };\n        }\n    }\n    exports.MiniProgramHTTPTransport = MiniProgramHTTPTransport;\n});\n//# sourceMappingURL=data:application/json;base64,","(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"tslib\", \"@ant-basement/core\", \"crypto-js/core\", \"crypto-js/hmac-md5\", \"util\", \"./error\"], factory);\n    }\n})(function (require, exports) {\n    \n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const tslib_1 = require(\"tslib\");\n    const core_1 = require(\"@ant-basement/core\");\n    const core_2 = tslib_1.__importDefault(require(\"crypto-js/core\"));\n    const hmac_md5_1 = tslib_1.__importDefault(require(\"crypto-js/hmac-md5\"));\n    const util_1 = require(\"util\");\n    const error_1 = require(\"./error\");\n    class MiniProgramHTTPRequestEncoder extends core_1.HTTPRequestEncoder {\n        constructor(endpoint, spaceId) {\n            super(endpoint);\n            this.spaceId = spaceId;\n            this.prefix = core_1.PREFIX.CLIENT;\n            this.serviceHeaders = {};\n            this.setBodyField({\n                spaceId,\n            });\n        }\n        sign(clientSecret) {\n            const { spaceId, method, params, token, userId } = this.body;\n            const timestamp = Date.now();\n            this.setBodyField({\n                timestamp,\n            });\n            let signString = '';\n            const signObject = {\n                spaceId,\n                timestamp,\n                method,\n                params: JSON.stringify(params),\n                token,\n                userId,\n            };\n            Object.keys(signObject).sort().forEach(key => {\n                if (signObject[key]) {\n                    signString = `${signString}&${key}=${signObject[key]}`;\n                }\n            });\n            signString = signString.slice(1);\n            const sign = hmac_md5_1.default(signString, clientSecret).toString(core_2.default.enc.Hex);\n            this.setServerlessHeaders({ sign });\n        }\n        encodeAsHTTPRequestObject(additionalObject) {\n            if (this.body.params) {\n                this.body.params = JSON.stringify(this.body.params);\n            }\n            return {\n                url: this.url,\n                data: this.body,\n                method: this.method,\n                headers: this.headers,\n                header: this.headers,\n                dataType: 'json',\n                ...additionalObject,\n            };\n        }\n        clone() {\n            const encoder = new MiniProgramHTTPRequestEncoder(this.endpoint, this.spaceId);\n            encoder.setBodyField(this.body);\n            encoder.setBaseHeaders(this.baseHeaders);\n            encoder.setServerlessHeaders(this.serverlessHeaders);\n            return encoder;\n        }\n    }\n    exports.MiniProgramHTTPRequestEncoder = MiniProgramHTTPRequestEncoder;\n    class MiniProgramHTTPResponseDecoder extends core_1.HTTPResponseDecoder {\n        constructor() {\n            super(...arguments);\n            this.ERROR_CODES = [11, 12, 13, 14, 19, 20];\n        }\n        setStatusAndBody(status, body) {\n            super.setStatusAndBody(status, body);\n            if (this.ERROR_CODES.includes(status)) {\n                this._error = error_1.MPServerlessClientError.from({\n                    name: core_1.ErrorName.IDE_ERROR,\n                    code: status.toString(),\n                    type: core_1.ErrorType.IDE_ERROR,\n                    message: 'request error from Alipay IDE',\n                });\n            }\n        }\n        decode(res) {\n            this.setHeaders(res.headers || {});\n            let body = res.data || res.body;\n            if (typeof body === 'string') {\n                body = JSON.parse(body);\n            }\n            if (body && body.data) {\n                if (util_1.isNumber(body.data.affectedDocs)) {\n                    body = Object.assign({}, body, {\n                        ...body.data,\n                    });\n                }\n                else if (Object.prototype.toString.call(body.data) === '[object Object]') {\n                    body.result = Object.assign({}, body.data);\n                }\n                else if (Object.prototype.toString.call(body.data) === '[object Array]') {\n                    [...body.result] = body.data;\n                }\n                else {\n                    body.result = body.data;\n                }\n                delete body.data;\n            }\n            if (/^request:fail+/.test(res.errMsg)) {\n                this.setErrorMessage(res.errMsg);\n                return super.decode();\n            }\n            const responseErrorCode = parseInt(res.error, 10);\n            if (responseErrorCode) {\n                this.setStatusAndBody(responseErrorCode, body);\n                return super.decode();\n            }\n            const responseErrorMessage = res.err;\n            if (responseErrorMessage) {\n                this.setErrorMessage(responseErrorMessage);\n                return super.decode();\n            }\n            if (res instanceof Error) {\n                this.setErrorObject(res);\n                return super.decode();\n            }\n            if (body && typeof body.error === 'object') {\n                this.setErrorObject(body.error);\n                return super.decode();\n            }\n            const responseStatusCode = parseInt(res.status || res.statusCode, 10);\n            if (responseStatusCode) {\n                this.setStatusAndBody(responseStatusCode, body);\n                return super.decode();\n            }\n            this.setStatusAndBody(200, res);\n            return super.decode();\n        }\n    }\n    exports.MiniProgramHTTPResponseDecoder = MiniProgramHTTPResponseDecoder;\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29kZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQUEsNkNBUzRCO0lBQzVCLGtFQUFvQztJQUNwQywwRUFBeUM7SUFDekMsK0JBQWdDO0lBQ2hDLG1DQUFrRDtJQThCbEQsTUFBYSw2QkFBOEIsU0FBUSx5QkFBa0I7UUFTbkUsWUFBWSxRQUFnQixFQUFZLE9BQWU7WUFDckQsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBRHNCLFlBQU8sR0FBUCxPQUFPLENBQVE7WUFSN0MsV0FBTSxHQUFHLGFBQU0sQ0FBQyxNQUFNLENBQUM7WUFDdkIsbUJBQWMsR0FBMEIsRUFBRSxDQUFDO1lBVW5ELElBQUksQ0FBQyxZQUFZLENBQUM7Z0JBQ2hCLE9BQU87YUFDUixDQUFDLENBQUM7UUFDTCxDQUFDO1FBTU0sSUFBSSxDQUFDLFlBQW9CO1lBQzlCLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUM3RCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDN0IsSUFBSSxDQUFDLFlBQVksQ0FBQztnQkFDaEIsU0FBUzthQUNWLENBQUMsQ0FBQztZQUNILElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztZQUNwQixNQUFNLFVBQVUsR0FBRztnQkFDakIsT0FBTztnQkFDUCxTQUFTO2dCQUNULE1BQU07Z0JBQ04sTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO2dCQUM5QixLQUFLO2dCQUNMLE1BQU07YUFDUCxDQUFDO1lBQ0YsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQzNDLElBQUksVUFBVSxDQUFDLEdB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","(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"@ant-basement/core\"], factory);\n    }\n})(function (require, exports) {\n    \n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const core_1 = require(\"@ant-basement/core\");\n    class MPServerlessClientError extends core_1.BuiltInError {\n        constructor(name, code, type, message) {\n            super(message);\n            this.name = name;\n            this.code = code;\n            this.type = type;\n            this.message = message;\n        }\n        static from(raw) {\n            return new MPServerlessClientError(raw.name, raw.code, raw.type, raw.message);\n        }\n    }\n    exports.MPServerlessClientError = MPServerlessClientError;\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFBQSw2Q0FBbUU7SUFFbkUsTUFBYSx1QkFBd0IsU0FBUSxtQkFBWTtRQUN2RCxZQUNTLElBQVksRUFDWixJQUFZLEVBQ1osSUFBWSxFQUNaLE9BQWU7WUFFdEIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBTFIsU0FBSSxHQUFKLElBQUksQ0FBUTtZQUNaLFNBQUksR0FBSixJQUFJLENBQVE7WUFDWixTQUFJLEdBQUosSUFBSSxDQUFRO1lBQ1osWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUd4QixDQUFDO1FBT00sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFvQjtZQUNyQyxPQUFPLElBQUksdUJBQXVCLENBQ2hDLEdBQUcsQ0FBQyxJQUFJLEVBQ1IsR0FBRyxDQUFDLElBQUksRUFDUixHQUFHLENBQUMsSUFBSSxFQUNSLEdBQUcsQ0FBQyxPQUFPLENBQ1osQ0FBQztRQUNKLENBQUM7S0FDRjtJQXZCRCwwREF1QkMifQ==","(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"@ant-basement/core\"], factory);\n    }\n})(function (require, exports) {\n    \n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const core_1 = require(\"@ant-basement/core\");\n    class NetworkService extends core_1.BaseService {\n        async forward(method, params) {\n            const request = this.getEncoder();\n            request.setBodyField({\n                method,\n                params,\n            });\n            const response = await this.transport.request(request);\n            return response.body;\n        }\n    }\n    exports.NetworkService = NetworkService;\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV0d29yay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9uZXR3b3JrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBQUEsNkNBRzRCO0lBRTVCLE1BQWEsY0FBZSxTQUFRLGtCQUFXO1FBQ3RDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBYyxFQUFFLE1BQTBCO1lBQzdELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNsQyxPQUFPLENBQUMsWUFBWSxDQUFDO2dCQUNuQixNQUFNO2dCQUNOLE1BQU07YUFDUCxDQUFDLENBQUM7WUFFSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3ZELE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQztRQUN2QixDQUFDO0tBQ0Y7SUFYRCx3Q0FXQyJ9"]}